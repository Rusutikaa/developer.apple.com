<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="4.3.0_0_e0e1b4cc8" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(If that object can’t respond to the message either, it too will be given a chance to forward it.)</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>（そのオブジェクトもまたメッセージに応答出来ないならば、それもまたそれを転送する機会を与えられます。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(Obviously if you return <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> from this method, the code would just fall into an infinite loop.)</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>（当然ながらあなたが<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>をこのメソッドから返したならば、コードはあるいは無限ループに陥るでしょう。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(See also the Discussion section.)</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>（またDiscussion節を見てください。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> does not itself support the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSCopying<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>は、それ自身は<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSCopying<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>プロトコルをサポートしません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>'s implementation of this method simply prints the name of the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の持つ実装は、単純にクラスの名前を出力します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>’s implementation of <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>attribute<ph x="4">&lt;w4/&gt;</ph>Keys<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> simply calls <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>[[self class<ph x="7">&lt;w7/&gt;</ph>Description] attribute<ph x="8">&lt;w8/&gt;</ph>Keys]<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の持つ<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>attribute<ph x="4">&lt;w4/&gt;</ph>Keys<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>の実装は、単に<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>[[self class<ph x="7">&lt;w7/&gt;</ph>Description] attribute<ph x="8">&lt;w8/&gt;</ph>Keys]<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>を呼び出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>’s implementation of <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>forward<ph x="4">&lt;w4/&gt;</ph>Invocation:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> simply invokes the <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>does<ph x="8">&lt;w8/&gt;</ph>Not<ph x="9">&lt;w9/&gt;</ph>Recognize<ph x="10">&lt;w10/&gt;</ph>Selector:<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> method; it doesn’t forward any messages.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>に対する<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSObject<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>の持つ実装は、単純に<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>does<ph x="8">&lt;w8/&gt;</ph>Not<ph x="9">&lt;w9/&gt;</ph>Recognize<ph x="10">&lt;w10/&gt;</ph>Selector:<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>メソッドを発動します；それはどんなメッセージも転送しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>finalize<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> methods must be thread-safe.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>finalize<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドはスレッド安全である必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if instances of the class respond to the selector, otherwise <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>false<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>、もしこのクラスのインスタンスがセレクタに応答するならば、そうでなければ<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>false<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if the block was released successfully; otherwise, <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>false<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> (for example, the function returns <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>false<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> if the block was not used to create <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>an<ph x="8">&lt;w8/&gt;</ph>Imp<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> previously).</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>、もしブロックがうまく作成されたならば；そうでなければ、<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>false<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>（例えば、関数は<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>false<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>を返します、もしブロックが以前に<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>an<ph x="8">&lt;w8/&gt;</ph>Imp<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>を作成するのに使われなかったならば）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>user<ph x="2">&lt;w2/&gt;</ph>Info<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> keys are described in <bpt i="3" x="3">&lt;a3&gt;</bpt>NSUndefinedKeyException userInfo Keys<ept i="3">&lt;/a3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>user<ph x="2">&lt;w2/&gt;</ph>Info<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>キーそれらは、<bpt i="3" x="3">&lt;a3&gt;</bpt>NSUndefinedKeyException userInfo Keys<ept i="3">&lt;/a3&gt;</ept>において記述されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>’s implementation returns <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>の実装は<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>’s implementation returns the receiver’s class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>の持つ実装はレシーバのクラスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>’s implementation simply returns <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSObject<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>の持つ実装は単に<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>self<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>を返すだけです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>an<ph x="5">&lt;w5/&gt;</ph>Invocation<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> will hold the result, and the runtime system will extract and deliver this result to the original sender.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>an<ph x="5">&lt;w5/&gt;</ph>Invocation<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>は、結果を保持します、そしてランタイムシステムは、この結果を抜き出して元々の送り手（センダー）に届けます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>forward<ph x="5">&lt;w5/&gt;</ph>Invocation:<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> can, for example, be used to consolidate code that responds to a variety of different messages, thus avoiding the necessity of having to write a separate method for each selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>forward<ph x="5">&lt;w5/&gt;</ph>Invocation:<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>は、例えば、様々なことなるメッセージに応答するコードを統合するために使われることができます、それによって各セレクタに対して別個のメソッドを書かなければならない必要性を回避します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>forward<ph x="8">&lt;w8/&gt;</ph>Invocation:<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> method might also involve several other objects in the response to a given message, rather than forward it to just one.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>forward<ph x="8">&lt;w8/&gt;</ph>Invocation:<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>メソッドはまた、指定されたメッセージへの反応として、それをただ１つのものへと転送する代わりに、幾つかの他のオブジェクトを巻き込むこともできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the main thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メインスレッドのレシーバで指定されたセレクタが実行される後まで現在のスレッドを封鎖するかどうかを指定するブール。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the specified thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたスレッドのレシーバで指定されたセレクタが実行される後まで現在のスレッドを封鎖するかどうかを指定するブール。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A C array of all the protocols known to the runtime.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>runtimeにとって既知の全てのプロトコルからなるあるC配列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A C string representing the name of the library containing the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>クラスを含んでいるライブラリの名前を表しているC文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A C string.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるC文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A category <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method is called after the class’s own <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>+load<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるカテゴリ<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドは、そのクラス自身の<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>+load<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>メソッドの後に呼び出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A class also conforms to any protocols that are incorporated in the protocols it adopts or inherits.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスはまた、それが採用または継承するプロトコルの中に取り入れられるどんなプロトコルにも準拠します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A class is said to “conform to” a protocol if it adopts the protocol or inherits from another class that adopts it.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスがあるプロトコルに準拠すると言われるのは、それがそのプロトコルを採用するまたはそれを採用する別のクラスから継承する場合です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A class object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A class’s <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method is called after all of its superclasses’ <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>+load<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> methods.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスの持つ<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドは、それのスーパークラスの<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>+load<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>メソッド全ての後に呼び出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A collection of default comparison methods useful for performing specifier tests.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定子テストを実行するのに有用な省略時の比較メソッドのいちコレクション。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A collection of methods providing additional object specifier functionality.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>追加のオブジェクト指定子機能を提供するいちコレクション。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A collection of methods that provide additional capabilities for working with key-value coding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー値コーディングを扱うための追加能力を提供するメソッドのいちコレクション。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A collection of methods useful for comparing script objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スクリプトオブジェクトを比較するために有用なメソッドのいちコレクション。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A description of the layout of the weak <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>s for <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に対する弱い<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>それらのレイアウトの記述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A function pointer of type <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の関数ポインタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A key that identifies the relationship into which the new class object will be inserted.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そこにおいて新しいオブジェクトが挿入されることになるリレーションシップを識別するキー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A key that identifies the relationship into which to insert the copied object or objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>コピーされたオブジェクトまたは複数のオブジェクトがそこへと挿入されるところのリレーションシップを識別するキー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A key-value coding validation error.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー値コーディング検証エラー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A keyed archiver creating an archive.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アーカイブを作成するキー付きアーカイバー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A keyed archiver does not encode class version numbers.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー付きアーカイブは、クラスバージョン数をエンコードしません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A mechanism by which you can access the properties of an object indirectly by name or key.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それによってあなたがあるオブジェクトのプロパティに名前またはキーによって間接的にアクセスできるある仕組み。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A mechanism for converting one kind of scripting data to another.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある種のスクリプティングデータを別のものに変換するための仕組み。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A new instance of the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバ（受取り手）の新しいインスタンス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pointer of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>SEL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> specifying the selector for the named method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その名前付きメソッドに対するセレクタを指定している型<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>SEL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>のポインタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pointer to a C string.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるC文字列へのポインタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pointer to an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>Class<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> data structure.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>Class<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>データ構造体へのポインタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pointer to an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>Ivar<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> data structure containing information about the class variable specified by <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>name<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>Ivar<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>データ構造体へのポインタ、<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>name<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>によって指定されたクラス変数についての情報を含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A proxy for the receiving object</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>受け取り手側オブジェクトに対する代理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>セレクタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A string containing the name of the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスの名前を格納している文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A string that represents the contents of the receiving class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバであるクラスの内容を表した文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A value to compare.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>比較する値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Accessibility</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アクセシビリティ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding Classes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスを加える</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a method to a protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドをあるプロトコルに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a new instance variable to a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいインスタンス変数をクラスに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a new method to a class with a given name and implementation.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいメソッドをある与えられた名前と実装をもつクラスに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a property to a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロパティをあるクラスに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a property to a protocol that is under construction.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコルをある建設中のプロトコルに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a protocol to a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコルをあるクラスに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a registered protocol to another protocol that is under construction.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある登録済みプロトコルを、建設中の別のプロトコルに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> methods in your image.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたのイメージの中の全ての<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>+load<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッド。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All initializers in any framework you link to.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがそれへとリンクする何らかのフレームワークの中の全てのイニシャライザ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All initializers in frameworks that link to you.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたへとリンクするフレームワークの中の全てのイニシャライザ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All perform requests having the same target <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Target<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> are canceled.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>同じ目標（ターゲット）<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Target<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を持つ全ての実行要請がキャンセルされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All types of return values can be delivered to the sender: <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>id<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> types, structures, double-precision floating-point numbers.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>全ての型の戻り値が、送り手に届けらることができます：<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>id<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>型、構造体、倍精度浮動小数点数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allocates a new instance of the receiving class, sends it an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>init<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> message, and returns the initialized object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>受け取っているクラスの新しいインスタンスをメモリ割り当てして、それに<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>init<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>メッセージを送ります、そしてその初期化されたオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> that was created using the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>、それは<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>関数を使って作成されたものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object sends this message to a handler immediately before attempting to move, copy, rename, or delete, or before attempting to link to a given path.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>移動、コピー、名前変更、または消去を試みる直前に、または与えられたパスにリンクを試みる前にハンドラにこのメッセージを送った<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object sends this message to its handler for each error it encounters when copying, moving, removing, or linking files or directories.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ファイルまたはディレクトリをコピー、移動、削除、またはリンクする場合にそれが出くわす各エラーに対するそれのハンドラにこのメッセージを送った<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>-keyed dictionary of the receiver's scriptable properties, including all of those that are declared as Attributes and ToOneRelationships in the <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>.script<ph x="4">&lt;w4/&gt;</ph>Suite<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> property list entries for the class and its scripting superclasses, with the exception of ones keyed by "scriptingProperties." Each key in the dictionary must be identical to the key for an Attribute or ToOneRelationship.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの持つスクリプト対応プロパティの、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>でキー付けされたディクショナリです、含んでいるのは<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>.script<ph x="4">&lt;w4/&gt;</ph>Suite<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>プロパティリスト登録項目においてクラスとそれのスクリプティングスーパークラスに対してAttributesおよびToOneRelationshipsとして宣言される全てのもので、「scriptingProperties」によってキー付けされるものは除きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>-keyed dictionary of the receiver's scriptable properties.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの持つスクリプト対応プロパティの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>でキー付けされたディクショナリ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_method<ph x="3">&lt;w3/&gt;</ph>_description<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> structure that describes the method specified by <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>m<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_method<ph x="3">&lt;w3/&gt;</ph>_description<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>構造体、それは<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>m<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>によって指定されたメソッドを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An Objective-C method is simply a C function that take at least two arguments—<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>self<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>_cmd<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Objective-Cメソッドは、単純にC関数です、それは少なくとも２つの引数を取ります—<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>self<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>と<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>_cmd<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An Objective-C object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるObjective-Cオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array containing the keys for the to-many relationship properties of the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの対多関係プロパティに対するキーを格納している配列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> objects containing the names of immutable values that instances of the receiver's class contain.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSString<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクトの配列、不変の値の名前を格納していて、それはレシーバのクラスのインスタンスを含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of C strings representing all of the class names within the specified library or framework.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたライブラリまたはフレームワーク内のクラス名の全てを表しているC文字列それらからなるある配列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of pointers of type <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Method<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> describing the instance methods implemented by the class—any instance methods implemented by superclasses are not included.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラスによって実装されるインスタンスメソッドを記述している型<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Method<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>のポインタそれらからなるある配列 — スーパークラスによって実装されるどんなインスタンスメソッドも含まれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of pointers of type <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_property<ph x="3">&lt;w3/&gt;</ph>_t<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> describing the properties declared by the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラスによって宣言されるプロパティを記述している型<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_property<ph x="3">&lt;w3/&gt;</ph>_t<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>のポインタそれらからなるある配列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of strings that identifies the modes in which it is permissible to perform the specified selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>文字列からなる配列、それは指定されたセレクタの実行が許可されるモードを識別します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An array of strings that identify the modes to associate with the timer that performs the selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>文字列からなる配列、それはモードを識別してセレクタを実行するタイマーと結びつけます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An error is generated if instances of the receiver can’t respond to <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> messages.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのインスタンスが<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メッセージに応答出来ないならばエラーが生成されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An error object containing details of why the connection failed to load the request successfully.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>なぜ接続がリクエストをうまくロードするのに失敗したかの詳細を含んでいるエラーオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An implementation of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method has two tasks:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドの実装には２つのやるべき仕事があります：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An informal protocol that objects adopt to be notified of changes to the specified properties of other objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある非形式プロトコル、それは、オブジェクトが採用して、他のオブジェクトの指定されたプロパティに対する変更の通知を受けるようになるものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An initialized object, or <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if an object could not be created for some reason that would not result in an exception.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>初期化されたオブジェクト、または例外に終わらない何らかの理由でオブジェクトが作成されることができなかったならば<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An integer indicating the version number of the class definition.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラス定義のバージョン番号を指し示しているある整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An integer value.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある整数値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An integer.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An object containing information about the attributes and relationships of the receiver’s class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのクラスの属性とリレーションシップ（関係）についての情報を格納しているオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An object isn’t ready to be used until it has been initialized.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトは、それが初期化されてしまうまで使われる準備ができていません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An object might encode itself into an archive, but encode a proxy for itself if it’s being encoded for distribution.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトは、それ自身をアーカイブへとエンコードします、しかしそれが供給のためにエンコードされるならば、それ自身の代理をエンコードします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An object or objects to be copied.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>コピーされるオブジェクトまたは複数のオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An object specifier to be evaluated.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>評価されるオブジェクト指定子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Another value to compare.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>もう一方の比較する値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any properties declared by superclasses are not included.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スーパークラスによって宣言されるどんなプロパティも含まれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Arbitrary data that is passed to <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>observer<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> in <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>observe<ph x="5">&lt;w5/&gt;</ph>Value(for<ph x="6">&lt;w6/&gt;</ph>Key<ph x="7">&lt;w7/&gt;</ph>Path:<ph x="8">&lt;w8/&gt;</ph>of:<ph x="9">&lt;w9/&gt;</ph>change:<ph x="10">&lt;w10/&gt;</ph>context:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>observe<ph x="5">&lt;w5/&gt;</ph>Value(for<ph x="6">&lt;w6/&gt;</ph>Key<ph x="7">&lt;w7/&gt;</ph>Path:<ph x="8">&lt;w8/&gt;</ph>of:<ph x="9">&lt;w9/&gt;</ph>change:<ph x="10">&lt;w10/&gt;</ph>context:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>において<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>observer<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>に渡される随意のデータ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Archiving</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アーカイブ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As part of its normal run loop processing, the main thread dequeues the message (assuming it is running in one of the common run loop modes) and invokes the desired method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それの標準的な実行ループ処理の一部として、メインスレッドはメッセージを（それが通常の実行ループモードの１つで実行されていると仮定して）デキューして、要望されたメソッドを発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As part of its normal run loop processing, the main thread dequeues the message (assuming it is running in one of the specified modes) and invokes the desired method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それの標準的な実行ループ処理の一部として、メインスレッドはメッセージを（それが指定されたモードの１つで実行されていると仮定して）デキューして、要望されたメソッドを発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As part of its normal run loop processing, the target thread dequeues the message (assuming it is running in one of the default run loop modes) and invokes the desired method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それの標準的な実行ループ処理の一部として、目標のスレッドはメッセージを（それが省略時の実行ループモードの１つで実行されていると仮定して）デキューして、要望されたメソッドを発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As part of its normal run loop processing, the target thread dequeues the message (assuming it is running in one of the specified modes) and invokes the desired method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それの標準的な実行ループ処理の一部として、目標のスレッドはメッセージを（それが指定された実行ループモードの１つで実行されていると仮定して）デキューして、要望されたメソッドを発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Associative References</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関連参照</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Attempting Recovery From Errors</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>エラーからの復旧を試みる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>nil<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> is a valid return value, failure is signaled by invoking the object specifier’s <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>set<ph x="6">&lt;w6/&gt;</ph>Evaluation<ph x="7">&lt;w7/&gt;</ph>Error:<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> method before returning.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>nil<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>は有効な戻り値なので、失敗は、返る前にオブジェクト指定子の持つ<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>set<ph x="6">&lt;w6/&gt;</ph>Evaluation<ph x="7">&lt;w7/&gt;</ph>Error:<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>メソッドを発動することによって合図されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Cancels perform requests previously registered with <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>perform(_:<ph x="3">&lt;w3/&gt;</ph>with:<ph x="4">&lt;w4/&gt;</ph>after<ph x="5">&lt;w5/&gt;</ph>Delay:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>perform(_:<ph x="3">&lt;w3/&gt;</ph>with:<ph x="4">&lt;w4/&gt;</ph>after<ph x="5">&lt;w5/&gt;</ph>Delay:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>で登録された実行要請を取消します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Cancels perform requests previously registered with the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>perform(_:<ph x="3">&lt;w3/&gt;</ph>with:<ph x="4">&lt;w4/&gt;</ph>after<ph x="5">&lt;w5/&gt;</ph>Delay:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> instance method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>以前に<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>perform(_:<ph x="3">&lt;w3/&gt;</ph>with:<ph x="4">&lt;w4/&gt;</ph>after<ph x="5">&lt;w5/&gt;</ph>Delay:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>インスタンスメソッドで登録された実行要請を取消します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Caution should be taken when obtaining the version from within an <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSCoding<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> protocol or other methods.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSCoding<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>プロトコルまたは他のメソッド内部からバージョンを手に入れる時は注意が払われるべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Changes the attributes of a given file or directory.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたファイルまたはディレクトリの属性を変更します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Class methods should be added to the metaclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスメソッドは、メタクラスに加えられるべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Classes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラス </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Classes derived from the Foundation framework <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> class can obtain the class-definition version number using the <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>get<ph x="4">&lt;w4/&gt;</ph>Version<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> class method, which is implemented using the <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>class<ph x="7">&lt;w7/&gt;</ph>_get<ph x="8">&lt;w8/&gt;</ph>Version<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Foundationフレームワークの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>クラスから派生するクラスは、クラス定義バージョン番号を<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>set<ph x="4">&lt;w4/&gt;</ph>Version:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>クラスメソッドを使って入手できます、それは<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>class<ph x="7">&lt;w7/&gt;</ph>_get<ph x="8">&lt;w8/&gt;</ph>Version<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>関数を使って実装されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Classes derived from the Foundation framework <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> class can set the class-definition version number using the <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>set<ph x="4">&lt;w4/&gt;</ph>Version:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> class method, which is implemented using the <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>class<ph x="7">&lt;w7/&gt;</ph>_set<ph x="8">&lt;w8/&gt;</ph>Version<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Foundationフレームワークの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>クラスから派生するクラスは、クラス定義バージョン番号を<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>set<ph x="4">&lt;w4/&gt;</ph>Version:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>クラスメソッドを使って設定できます、それは<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>class<ph x="7">&lt;w7/&gt;</ph>_set<ph x="8">&lt;w8/&gt;</ph>Version<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>関数を使って実装されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Cocoa scripting takes advantage of key-value coding to get and set information in scriptable objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Cocoaスクリプティングは、「キー値」コーディングを利用して、スクリプト対応オブジェクの中の情報を取得及び設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conforming Types</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これらの型が準拠</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conforms To</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>次に準拠</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Constants</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>定数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a directory (without contents) at a given path with given attributes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ディレクトリを（内容無しで）与えられたパスで、いくらかの与えられた属性とともに作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a new class and metaclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラスとメタクラスを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a new protocol instance.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいプロトコルインスタンスを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a pointer to a function that calls the specified block when the method is called.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある関数へのポインターを作成します、それはメソッドが呼び出される時に指定されたブロックを呼び出すものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a symbolic link identified by a given path that refers to a given location.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたパスによって識別されるシンボリックリンクを作成します、それは与えられた場所に言及します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates an instance initialized to the given value.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられた値に初期化されるインスタンスを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates and returns an instance of a scriptable class, setting its contents and properties, for insertion into the relationship identified by the key.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スクリプト対応クラスのインスタンスを作成して返します、それの内容とプロパティを設定します、キーによって識別されるリレーションシップへの挿入のためです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates and returns one or more scripting objects to be inserted into the specified relationship by copying the passed-in value and setting the properties in the copied object or objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたリレーションシップへと挿入されるひとつ以上のスクリプティングオブジェクトを作成して返します、それは渡された値をコピーしてコビーされたオブジェクトまたは複数オブジェクトにおいてプロパティを設定することによってです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creating, Copying, and Deallocating Objects</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトの作成、複製、そして割り当て解除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Data Types</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>さまざまなデータ型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deallocates the memory occupied by the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバによって占有されたメモリを割り当て解除します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Declaration</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>宣言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deprecated</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>非推奨</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deprecated Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>非推奨メソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deprecated Symbols</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>非推奨シンボル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Derived from the "with properties" parameter of a <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>duplicate<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>duplicate<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>コマンドの「with properties」パラメータから引き出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describes the instance methods implemented by a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスによって実装されたインスタンスメソッドを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describes the instance variables declared by a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスによって宣言されたインスタンス変数を記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describes the macOS Objective-C runtime library support functions and data structures.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関数とデータ構造体をサポートするmacOS Objective-C ランタイムライブラリを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describes the properties declared by a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスによって宣言されたプロパティを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describes the protocols adopted by a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスによって採用されたプロトコルそれらを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Describing Objects</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトの解説</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Destroys a class and its associated metaclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスとそれの関連メタクラスを破壊します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Disassociates a block from an <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> that was created using <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, and releases the copy of the block that was created.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブロックを<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>を使って作成されたある<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>と無関係にします、そしてその作成されたブロックのコピーを解放します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Discussion</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>解説</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Do not override <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to include initialization code.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>をオーバーライドして初期化コードを含めないでください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Don’t simply send <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>version<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to the return value of class—a subclass version number may be returned instead.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>単純に<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>version<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>をクラスの戻り値に送らないでください—サブクラスバージョン数が代わりに返されるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>During keyed unarchiving, instances of the receiver will be decoded as members of the returned class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー付きアンアーカイブの間に、レシーバのインスタンスはこの返された型のメンバーとしてデコードされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dynamically Resolving Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>動的に決定するメソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dynamically provides an implementation for a given selector for a class method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある指定された、クラスメソッドに対するセレクタに、実装を動的に提供します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dynamically provides an implementation for a given selector for an instance method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある指定された、インスタンスメソッドに対するセレクタに、実装を動的に提供します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enumeration</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>列挙</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enumeration Case</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>列挙ケース</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enumeration Cases</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>列挙ケース</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enumerations</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>列挙</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Exchanges the implementations of two methods.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>２つのメソッドの実装を交換します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File System</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ファイルシステム</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a given key that defines the name of the relationship from the receiver’s class to another class, returns the name of the relationship from the other class to the receiver’s class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのクラスから別のクラスへのリレーションシップ（関係）の名前を定義する指定されたキーに対して、別のクラスからレシーバのクラスへのリレーションシップの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For any values <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>b<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>a != b<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> implies that <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>a == b<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> is <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>false<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>何らかの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>と<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>b<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に対して、<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>a != b<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>は<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>a == b<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>が<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>false<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>であることを意味します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, here <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>My<ph x="2">&lt;w2/&gt;</ph>Class<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> adopts the (fictitious) <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>Affiliation<ph x="5">&lt;w5/&gt;</ph>Requests<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> and <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>Normalization<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> protocols:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>例えば、ここにある<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>My<ph x="2">&lt;w2/&gt;</ph>Class<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>は、（架空の）<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>Affiliation<ph x="5">&lt;w5/&gt;</ph>Requests<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>と<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>Normalization<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>プロトコルを採用します：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, here the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Affiliation<ph x="2">&lt;w2/&gt;</ph>Requests<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> protocol incorporates the <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>Joining<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> protocol:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>例えば、ここで<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Affiliation<ph x="2">&lt;w2/&gt;</ph>Requests<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>プロトコルは<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>Joining<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>プロトコルを取り入れます：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, if after decoding an object you discover that an equivalent object already exists, you can return the existing object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>例えば、あるオブジェクトのデコードの後に同等なオブジェクトが既に存在することをあなたが発見するならば、あなたは既存のオブジェクトを返すことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, if the property is a to-many relationship, <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>value<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> will always be an array of objects to be copied, and this method must therefore return an array of objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>例えば、そのプロパティが対多関係ならば、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>value<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>は常にオブジェクトの配列でコピーされることになります。そしてこのメソッドは従ってオブジェクトの配列を返さなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>例えば：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For historical reasons, <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> invokes <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>alloc<ph x="4">&lt;w4/&gt;</ph>With<ph x="5">&lt;w5/&gt;</ph>Zone:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>歴史的な理由のために、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>は<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>alloc<ph x="4">&lt;w4/&gt;</ph>With<ph x="5">&lt;w5/&gt;</ph>Zone:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>を発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information, see <bpt i="0" x="0">&lt;a0&gt;</bpt>Accessibility Programming Guide for OS X<ept i="0">&lt;/a0&gt;</ept> or <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSAccessibility<ph x="4">&lt;w4/&gt;</ph>Protocol<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>さらなる情報として、<bpt i="0" x="0">&lt;a0&gt;</bpt>Accessibility Programming Guide for OS X<ept i="0">&lt;/a0&gt;</ept>または<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSAccessibility<ph x="4">&lt;w4/&gt;</ph>Protocol<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For possible values, see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>objc<ph x="3">&lt;w3/&gt;</ph>_Association<ph x="4">&lt;w4/&gt;</ph>Policy<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>可能な値として、<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>objc<ph x="3">&lt;w3/&gt;</ph>_Association<ph x="4">&lt;w4/&gt;</ph>Policy<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For sdef-declared scriptability, however, the types of the passed-in objects reliably match the relevant sdef declarations.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>sdefで宣言されるスクリプト対応機能情報にとっては、しかしながら、渡されたオブジェクトの型は期待通りに関係するsdef宣言部分と一致します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Forwarding Messages</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メッセージの転送</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Foundation</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ファウンデーション</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Framework</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>フレームワーク</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>From Protocol</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>由来プロトコル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Function</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Functions</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Functions and data structures that comprise the Objective-C runtime, which provides support for the dynamic properties of the Objective-C language</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関数およびデータ構造体で、Objective-Cランタイムを構成するもの、それはObjective-C言語の動的プロパティに対するサボートを提供します</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gain low-level access to the Objective-C runtime and the Objective-C root types.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Objective-CランタイムとObjective-Cルート型への低水準アクセスを獲得します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Getting Values</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>値を取得する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given an object specifier, returns the specified object or objects in the receiving container.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクト指定子を与えられて、受け取っているコンテナの中の指定されたオブジェクトまたは複数のオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given the following function:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>以下の関数を与えられて：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Handles messages the receiver doesn’t recognize.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが認識できないメッセージを取り扱います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Handling Errors</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>エラーを取り扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, they can be used in program code to prevent a method from being inherited.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>しかしながら、それらはあるメソッドが継承されるのを妨げるためにプログラムコードにおいて使われることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Identifying Classes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスの識別</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> declares no properties, or <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> is <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>, returns <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> and <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>*out<ph x="10">&lt;w10/&gt;</ph>Count<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept> is <bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>0<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>がまったくプロパティを宣言しない、または<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>が<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>であるならば、<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>を返します、そして<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>*out<ph x="10">&lt;w10/&gt;</ph>Count<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>は <bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>0<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> implements no instance methods, or <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> is <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>, returns <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> and <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>*out<ph x="10">&lt;w10/&gt;</ph>Count<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept> is <bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>0<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>cls<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>がまったくインスタンスメソッドを実装しない、または<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>が<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>であるならば、<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>を返して<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>*out<ph x="10">&lt;w10/&gt;</ph>Count<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>は<bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>0<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>out<ph x="2">&lt;w2/&gt;</ph>Count<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> is <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NULL<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>, the length is not returned.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>out<ph x="2">&lt;w2/&gt;</ph>Count<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>が<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NULL<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>ならば、長さは返されません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a class adopts a protocol that incorporates another protocol, it must also implement all the methods in the incorporated protocol or inherit those methods from a class that adopts it.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスが別のプロトコルを取り入れるプロトコルを採用するならば、それは、取り入れられたプロトコル中の全てのメソッドを実装するか、それを採用するクラスからそれらのメソッドを継承しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a replacement is returned, your overriding method is responsible for releasing the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>代わりの物を返すならば、あなたのオーバーライドしているメソッドは、そのレシーパをリリースする責任があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If an object implements (or inherits) this method, and returns a non-<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> (and non-<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>self<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>) result, that returned object is used as the new receiver object and the message dispatch resumes to that new object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトがこのメソッドを実装（または継承）するならば、そして非<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>（および非<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>self<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>）の結果を返すならば、その返されるオブジェクトが新しいレシーバ（受け取り手）オブジェクトとして使われます、そしてメッセージ発送はその新しいオブジェクトに対して再び始まります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no version has been set, the default is <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>バージョンが設定されていないならば、初期状態では<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the method name has already been registered, this function simply returns the selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッド名が既に登録されているならば、この関数は単にそのセレクタを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the new object can’t be initialized, the method should return <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>nil<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいオブジェクトが初期化されることができなかったならば、そのメソッドは<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>nil<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>を返すべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the receiver is an instance, <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> should refer to an instance method; if the receiver is a class, it should refer to a class method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバがインスタンスならば、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>は勿論インスタンスメソッドを参照するはずです；レシーバがクラスならば、それはクラスメソッドを参照するはずです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this property is <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>, the result of this property is ignored.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このプロパティが<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>ならば、このプロパティの結果は無視されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you implement this method in a non-root class, if your class has nothing to return for the given selector then you should return the result of invoking super’s implementation.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがこのメソッドを非ルートクラスにおいて実装する場合、あなたのクラスが指定されたセレクタに対して返すことが何もないならばその時はあなたはスーパーの実装の発動の結果を返すべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you specify <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> or an empty array for this parameter, this method returns without performing the specified selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>または空の配列をこのパラメータに指定するならば、このメソッドは指定されたセレクタを実行することなく返ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you specify different modes for each selector, any selectors whose associated mode does not match the current run loop mode are skipped until the run loop subsequently executes in that mode.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが異なるモードをそれぞれのセレクタに指定するならば、それと結びつけられたモードが現在の実行ループモードと一致しないあらゆるセレクタは、実行ループが後でそのモードで実行されるまでスキップされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to protect yourself from being run multiple times, you can structure your implementation along these lines:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが複数回実行されることから身を守りたいならば、あなたはこれらの行に沿ってあなたの実装を組織立てることができます：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implementations of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method can do more than just forward messages.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドの実装は、ただメッセージを転送するよりも多くのことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implemented by subclasses to initialize a new object (the receiver) immediately after memory for it has been allocated.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによって実装されて、新しいオブジェクト（レシーバ）を、それのためのメモリが割り当てられた直後に初期化します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implemented to attempt a recovery from an error noted in a document-modal sheet.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ドキュメントモーダルシートにおいて注記されるエラーからの復旧を試みるために実装されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implemented to attempt a recovery from an error noted in an application-modal dialog.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アプリケーションモーダルダイアログにおいて注記されるエラーからの復旧を試みるために実装されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Important</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>重要</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In addition:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>加えて：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In an implementation of <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>, do not invoke the superclass’s implementation.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の実装において、スーパークラスの実装を発動しないでください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In other words, this method must not return normally; it must always result in an exception being thrown.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>言い換えれば、このメソッドは普通に返してはいけません；それは常に例外をスローされる結果になる必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the simple case, in which an object forwards messages to just one destination (such as the hypothetical <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>friend<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> instance variable in the example below), a <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>forward<ph x="4">&lt;w4/&gt;</ph>Invocation:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> method could be as simple as this:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトがメッセージをただ１つの目的地に転送する（以下の例での仮定の<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>friend<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>インスタンス変数ように）、単純な場合では、<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>forward<ph x="4">&lt;w4/&gt;</ph>Invocation:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>メソッドはこれと同じくらい単純でありえます：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inequality is the inverse of equality.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>不等性は、同等性の裏返しです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inherited By</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>継承される先</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initializers</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>イニシャライザ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initializes the class before it receives its first message.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスを、それがそれの最初のメッセージを受け取る前に初期化します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initializing a Class</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスの初期化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inserted by the compiler when a mutation is detected during a foreach iteration.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある変異がforeach反復の間に検知される時に、コンパイラによって挿入されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instance Method</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスメソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instance Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンス メソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instance Properties</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスプロパティ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instance Property</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスプロパティ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instance methods and instance variables should be added to the class itself.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスメソッドおよびインスタンス変数は、クラスそれ自身に加えられるべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instead, an object’s <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>dealloc<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> method is invoked by the runtime.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その代わりに、オブジェクトの<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>dealloc<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>メソッドはランタイムによって初登されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Internationalization</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>国際化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invoked whenever a class or category is added to the Objective-C runtime; implement this method to perform class-specific behavior upon loading.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスまたはカテゴリがObjective-Cランタイムに加えられる時はいつでも発動します；このメソッドを実装して、クラス特有の挙動をロードすることで実行します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on a new background thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのメソッドを新しいバックグラウンドスレッド上で発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the current thread using the default mode after a delay.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのあるメソッドを現在のスレッド上で省略時のモードを使ってある猶予の後で発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the current thread using the specified modes after a delay.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのあるメソッドを現在のスレッド上で指定したモードを使ってある猶予の後で発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the main thread using the default mode.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのメソッドをメインスレッド上で省略時のモードを使って発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the main thread using the specified modes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのメソッドをメインスレッド上で指定モードを使って発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the specified thread using the default mode.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのメソッドを指定スレッド上で省略時のモードを使って発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Invokes a method of the receiver on the specified thread using the specified modes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのメソッドを指定スレッド上で指定モードを使って発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It delegates the message by creating an <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSInvocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object representing the message and sending the receiver a <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>forward<ph x="4">&lt;w4/&gt;</ph>Invocation:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> message containing this <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>NSInvocation<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> object as the argument.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それは、メッセージを表す<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSInvocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクトを作成し、この<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSInvocation<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>オブジェクトを引数として格納する<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>forward<ph x="6">&lt;w6/&gt;</ph>Invocation:<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>メッセージをレシーバに送ることによって、メッセージを委任します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It doesn’t check to see whether the methods declared in the protocol are actually implemented—that’s the programmer’s responsibility.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それは、プロトコルで宣言されるメソッドが実際に実装されるかどうか確認しません—それはプログラマーの責任です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is an error to store <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>self<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> into a new or existing live object (colloquially known as “resurrection”), which implies that this method will be called only once.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>self<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を新しいまたは既存の生きているオブジェクトに格納すること（通称で「再生」として知られる）はエラーとなります、それはこのメソッドがただ一度だけ呼び出されることになるのを意味します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is not useful where the goal of the forwarding is to capture the NSInvocation, or manipulate the arguments or return value during the forwarding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それは、転送の目的が、NSInvocationをキャプチャすること、または転送の間に引数や戻り値に手を入れることであるところでは実用的ではありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It succeeds if the run loop is running and in one of the specified modes; otherwise, the timer waits until the run loop is in one of those modes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>実行ループが動作していて指定されたのモードの１つならばそれはうまくいきます；そうでなければタイマーは実行ループがこれらのモードの１つになるまで待ちます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It succeeds if the run loop is running and in the default mode; otherwise, the timer waits until the run loop is in the default mode.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>実行ループが動作していてデフォルトのモードならばそれはうまくいきます；そうでなければタイマーは実行ループがデフォルトのモードになるまで待ちます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Key-Value Coding</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー値コーディング</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Key-Value Observing</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー値監視する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Listing 1</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>コード出力 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Loads the object referenced by a weak pointer and returns it.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>弱いポインタによって参照されたオブジェクトをロードします、そしてそれを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Locates and returns the address of the implementation of the instance method identified by a given selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたセレクタによって識別されるインスタンスメソッドの実装の所在（アドレス）を突き止めて返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Locates and returns the address of the receiver’s implementation of a method so it can be called as a function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのこのレシーバの持つ実装の所在（アドレス）を突き止めて返します、それでそれは関数として呼び出し可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multiple calls to this method from the same thread cause the corresponding selectors to be queued and performed in the same same order in which the calls were made, assuming the associated run loop modes for each selector are the same.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの同じスレッドからの複数の呼び出しは、該当しているセレクタがデキューされて、それらの呼び出しがされたのと同じ順序で実行されるようにします、それぞれのセレクタに関して実行ループモードが同じであると仮定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multiple calls to this method from the same thread cause the corresponding selectors to be queued and performed in the same same order in which the calls were made.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの同じスレッドからの複数の呼び出しは、該当しているセレクタがデキューされて、それらの呼び出しがされたのと同じ順序で実行されるようにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>NSObject Script Support</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>NSObjectスクリプトサポート</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>注意</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that this function searches superclasses for implementations, whereas <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>class<ph x="3">&lt;w3/&gt;</ph>_copy<ph x="4">&lt;w4/&gt;</ph>Method<ph x="5">&lt;w5/&gt;</ph>List(_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> does not.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この関数はスーパークラスを実装を求めて検索することに注意してください、一方で<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>class<ph x="3">&lt;w3/&gt;</ph>_copy<ph x="4">&lt;w4/&gt;</ph>Method<ph x="5">&lt;w5/&gt;</ph>List(_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>はそうしません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notifications</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>通知</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notify objects about changes to the properties of other objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>他のオブジェクトのプロパティに対する変更についてオブジェクトに通知します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Object Basics</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクト基礎</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Object Runtime</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトランタイム</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Objective-C Runtime</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Objective-Cランタイム</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Obtaining Information About Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッドについての情報の取得</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On This Page</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この項には</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On return, contains the length of the returned array.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>戻りでは、返された配列の長さを含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One common context where you might call this method and end up registering with a runloop that is not automatically run on a regular basis is when being invoked by a dispatch queue.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがこのメソッドを呼び出して自動的には通常の原則上で動かされない実行ループに登録することに終わるかもしれないよくある文脈は、ディスパッチキューによって発動されている時です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Operator</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>演算子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Operator Functions</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>演算子関数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to forward messages to other objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、メッセージを別のオブジェクトへ転送するためにサブクラスによってオーバーライドされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute a class other than its own during coding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによってオーバーライドされて、コーディングの間にそれ自身とは違うあるクラスに置き換えるようにされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute a new class during keyed unarchiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによってオーバーライドされて、キー付きアンアーカイブの間に新しいクラスの代理を務めます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute another object for itself during archiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによってオーバーライドされて、アーカイブの間に別のオブジェクトをそれ自身の代わりにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute another object for itself during encoding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによってオーバーライドされて、エンコーディングの間に別のオブジェクトをそれ自身の代わりにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute another object for itself during keyed archiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サブクラスによってオーバーライドされて、キー付きアーカイブの間に別のオブジェクトをそれ自身の代わりにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden by subclasses to substitute another object in place of the object that was decoded and subsequently received this message.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>サプクラスによってオーバーライドされて、デコードされた後このメッセージを受け取ったオブジェクトに代わって別のオブジェクトが代理を務めるようにされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overridden to return the names of classes that can be used to decode objects if their class is unavailable.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それらオブジェクトをデコードするために使われることが出来るクラスの名前を、それらのクラスが利用可能でないならば返すようにオーバーライド（サブクラスによって上書き）されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>概要</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Parameters</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>パラメータ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if the method does not take an argument.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッドが引数を取らないならば<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass <bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>nil<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept> to match a request for <bpt i="12" x="12">&lt;c12&gt;</bpt><bpt i="13" x="13">&lt;s13&gt;</bpt>nil<ept i="13">&lt;/s13&gt;</ept><ept i="12">&lt;/c12&gt;</ept> that was originally passed as the argument.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>元々引数として渡されたのが<bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>nil<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept>であるある要請と一致させるには<bpt i="12" x="12">&lt;c12&gt;</bpt><bpt i="13" x="13">&lt;s13&gt;</bpt>nil<ept i="13">&lt;/s13&gt;</ept><ept i="12">&lt;/c12&gt;</ept>を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> to clear an existing association.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>を渡すことで、ある既存の関連を取り除いてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass the class definition for which you wish to obtain the version.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それに対してあなたがバージョンを入手したいクラス定義を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass the class definition for which you wish to set the version.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それに対してあなたがバージョンを設定したいクラス定義を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass the name of the method you wish to register.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが登録したいメソッドの名前を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pass the new version number of the class definition.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラス定義の新しいバージョン番号を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performing comparisons</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>比較を実行する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Protocols</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>様々なプロトコル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Protocols are adopted by listing them within angle brackets after the interface declaration.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>プロトコルは、インターフェイス宣言の後に山形括弧の中にそれらを列記することによって採用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Protocols incorporate other protocols in the same way classes adopt them.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>プロトコルは、クラスがそれらを採用するのと同じ方法で他のプロトコルを取り入れます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Raised when a key value coding operation fails.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー値コーディング演算が失敗する時に引き起こされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Reads the value of an instance variable in an object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトの中のあるインスタンス変数の値を読み出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Registers a class that was allocated using <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_allocate<ph x="3">&lt;w3/&gt;</ph>Class<ph x="4">&lt;w4/&gt;</ph>Pair(_:<ph x="5">&lt;w5/&gt;</ph>_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_allocate<ph x="3">&lt;w3/&gt;</ph>Class<ph x="4">&lt;w4/&gt;</ph>Pair(_:<ph x="5">&lt;w5/&gt;</ph>_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を使ってアロケートされたクラスを登録します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Registers a given timer with a given input mode.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたタイマーをある与えられた入力モードで登録します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Registers a method name with the Objective-C runtime system.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッド名をObjective-C runtimeシステムに登録します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Registers a method with the Objective-C runtime system, maps the method name to a selector, and returns the selector value.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドをObjective-C runtimeシステムに登録して、そのメソッド名をあるセレクタにマップして、そしてそのセレクタ値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Registers a newly created protocol with the Objective-C runtime.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しく作成されたプロトコルをObjective-C runtimeに登録します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Related Documentation</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関連文書</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Relationships</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関係</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes all associations for a given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたオブジェクトに対して全ての関連を取り除きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Replace a property of a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスのあるプロパティを置き換えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Replaces the contents of the item at the specified URL in a manner that ensures no data loss occurs.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>データ損失が生じないことを保証する流儀で、指定されたURLで項目の内容を置き換えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Replaces the implementation of a method for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対するあるメソッドの実装を置き換えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Required.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>必須。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Resources</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>リソース</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Return Value</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>戻り値</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if an error occurs.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>エラーが起こるならば<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value indicating whether two values are not equal.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>２つの値が等しくないかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether a class conforms to a given protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それはあるクラスがある与えられたプロトコルに準拠するかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether a class object is a metaclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それはあるクラスオブジェクトがメタクラスであるかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether instances of a class respond to a particular selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それはあるクラスのインスタンスそれらがある特定のセレクタに応答するかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether instances of the receiver are capable of responding to a given selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのインスタンスが指定したセレクタに応答する能力があるかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether one protocol conforms to another protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それは一方のプロトコルが別のプロトコルに準拠するかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether receiver is considered to be “like” a given string when the case of characters in the receiver is ignored.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの中の文字の大文字小文字等が無視される場合に、与えられた文字列に「似ている」とレシーバが見なされるかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver and a given object are equal.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバと与えられたオブジェクトが等しいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver conforms to a given protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが指定したプロトコルに準拠するかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver contains a given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたオブジェクトをレシーバが含んでいるかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is "like" another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトと「似ている」かどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is equal to another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトと等しいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is greater than another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトより大きいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is greater than or equal to another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトより大きいまたは等しいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is less than another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトより小さいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is less than or equal to another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトより小さいまたは等しいかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiver is not equal to another given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバが別の与えられたオブジェクトと等しくないかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether the receiving class is a subclass of, or identical to, a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>受け取り手のクラスが、指定されたあるクラスのサブクラス、またはそれと同一であるかどうかを指し示すブール値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether two protocols are equal.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それは２つのプロトコルが等しいかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a Boolean value that indicates whether two selectors are equal.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるブール値を返します、それは２つのセレクタが等しいかどうかを指し示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a description of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> layout for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対する<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>レイアウトの記述を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a description of the layout of weak <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>s for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対する弱い<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>それらのレイアウトの記述を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a dictionary that describes the POSIX attributes of the file specified at a given.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられるところで指定されたファイルのPOSIX属性を記述する辞書を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a dictionary that describes the attributes of the mounted file system on which a given path resides.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そこにおいて与えられたパスが存在するところのマウントされたファイルシステムの属性を記述する辞書を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a method description structure for a specified method of a given protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたプロトコルのある指定されたメソッドに対するメソッド記述構造体を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a method description structure for a specified method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたメソッドに対するメソッド記述構造体を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a new instance of the receiving class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのクラスの新しいインスタンスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a pointer to any extra bytes allocated with a instance given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるインスタンス、与えられたオブジェクト、でアロケートされた何らかの余分なバイトへのポインタを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a pointer to the data structure describing a given class method for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対するある与えられたメソッドを記述しているデータ構造体へのポインタを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a property with a given name of a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスのある与えられた名前をもつプロパティを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a specified instance method for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対するある指定されたインスタンスメソッドを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a specified protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたプロトコルを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a string describing a method's parameter and return types.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのもつパラメータおよび戻り型を記述している文字列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a string describing a method's return type.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのもつ戻り型を記述している文字列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a string describing a single parameter type of a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのある単一のパラメータ型を記述している文字列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a string that represents the contents of the receiving class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバであるクラスの内容を表した文字列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns a the name of a protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコルの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an array of all the protocols known to the runtime.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>runtimeにとって既知の全てのプロトコルからなるある配列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an array of method descriptions of methods meeting a given specification for a given protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたプロトコルに対するある与えられた仕様に合っているメソッドそれらのメソッド記述からなるある配列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an array of the properties declared by a protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコルによって宣言されるプロパティそれらからなるある配列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an array of the protocols adopted by a protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるプロトコルによって採用されたプロトコルそれらからなるある配列を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an object initialized from data in a given unarchiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたアンアーカイバの中のデータから初期化されるオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an object specifier for the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバに対するオブジェクト指定子を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns by reference a string describing a method's return type.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのもつ戻り型を記述している文字列を参照によって返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns by reference a string describing a single parameter type of a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドのある単一のパラメータ型を記述している文字列を参照によって返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> for a specified class variable of a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>をある与えられたクラスのある指定されたクラス変数に対して返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> for a specified instance variable of a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>をある与えられたクラスのある指定されたインスタンス変数に対して返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the block associated with an <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> that was created using <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>IMP<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>と結び付けられたブロックを返します、それは<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>imp<ph x="5">&lt;w5/&gt;</ph>_implementation<ph x="6">&lt;w6/&gt;</ph>With<ph x="7">&lt;w7/&gt;</ph>Block(_:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>を使って作成されたものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the class name of a given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたオブジェクトのクラス名を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the class object for the receiver’s class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのもつクラスのクラスオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the class object for the receiver’s superclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのスーパークラスに対するクラスオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the class object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the class of an object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトのクラスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the directories and files (including symbolic links) contained in a given directory.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたディレクトリの中に含まれる（シンボリックリンクを含む）ディレクトリとファイルを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the function pointer that would be called if a particular message were sent to an instance of a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>関数ポインタを返します、それはある特定のメッセージがあるクラスのあるインスタンスに送られたならば呼び出されるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the implementation of a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドの実装を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the indices of the specified container objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>いくつかの指定されたコンテナオブジェクトのいくつかのインデックスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the name of a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the name of a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the name of the dynamic library a class originated from.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスがそれに源を発する動的ライブラリの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the name of the method specified by a given selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたセレクタによって指定されたメソッドの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the names of all the classes within a specified library or framework.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>指定されたライブラリまたはフレームワーク内の全てのクラスの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the names of all the loaded Objective-C frameworks and dynamic libraries.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>全てのロードされたObjective-Cフレームワークおよび動的ライブラリの名前を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the number of arguments accepted by a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドによって受け入れられる引数の数を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the object returned by <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>copy(with:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>copy(with:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>によって返されるオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the object returned by <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>copy<ph x="3">&lt;w3/&gt;</ph>With<ph x="4">&lt;w4/&gt;</ph>Zone:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>copy<ph x="3">&lt;w3/&gt;</ph>With<ph x="4">&lt;w4/&gt;</ph>Zone:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>によって返されるオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the object returned by <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>mutable<ph x="3">&lt;w3/&gt;</ph>Copy(with:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> where the zone is <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>mutable<ph x="3">&lt;w3/&gt;</ph>Copy(with:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>によって返されるオブジェクトを返します、そこでゾーンは<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the object to which unrecognized messages should first be directed.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>有効でないメッセージが最初に向けられるべきオブジェクトを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the path of the directory or file that a symbolic link at a given path refers to.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたパスでのシンボリックリンクが参照するディレクトリまたはファイルのパスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the size of instances of a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスのインスタンスのサイズを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the specified property of a given protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたプロトコルのこの指定されたプロパティを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the superclass of a class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスのスーパークラスを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the value associated with a given object for a given key.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたキーに対してある与えられたオブジェクトと結び付けられた値を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the version number assigned to the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラスに割り当てられたバージョン数を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns the version number of a class definition.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラス定義のバージョン番号を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scripting</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スクリプトを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scripting Support</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スクリプティングサポート</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See Also</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>参照</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sending Messages</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メッセージ送信</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets an associated value for a given object using a given key and association policy.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>与えられたオブジェクトに対する関連値をある与えられたキーと関連ポリシーを使って設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> layout for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対して<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>レイアウトを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the class of an object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトのクラスを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the current mutation handler.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>現在の変異ハンドラを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the implementation of a method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるメソッドの実装を設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the layout for weak <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>s for a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスに対する弱い<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Ivar<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>それらのレイアウトを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the receiver's version number.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのバージョンナンバーを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the superclass of a given class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある与えられたクラスのスーパークラスを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the value of an instance variable in an object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトの中のあるインスタンス変数の値を設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sets the version number of a class definition.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラス定義のバージョン番号を設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting Values</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>値を設定する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes there may be another class which may work nearly as well as a substitute for the new class, and the archive keys and archived state for the new class can be carefully chosen (or compatibility written out) so that the object can be unarchived as the substitute class if necessary.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>時には別のクラスが存在するかもしれません、それはおおよそその新しいクラスの代用として機能するかもしれません、そのため新しいクラスに対するアーカイブキーとアーカイブ状態は、綿密に選択される（または互換性が細大漏らさず書かれる）ことができます、それによって必要ならばそのオブジェクトが代用クラスとしてアンアーカイブされることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Special Considerations</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>特別な注意事項</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifies the contents of the object to be created.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>作成されるオブジェクトの内容を指定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifying a delay of 0 does not necessarily cause the selector to be performed immediately.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>0の猶予を指定することは、必ずしもセレクタが直ちに実行されるようにはしません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Stops the timer from ever firing again and requests its removal from its run loop.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>タイマーがこれから先再び発火するのを妨げます、そしてそれの実行ループからのそれの除去を要請します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Stores a new value in a <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>_<ph x="2">&lt;w2/&gt;</ph>_weak<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> variable.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しい値を<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>_<ph x="2">&lt;w2/&gt;</ph>_weak<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>変数の中に格納します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Structures</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>構造体 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Subclasses to substitute a new class for instances during keyed archiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー付きアーカイブ作成の間にインスタンスに対する新しいクラスの代理を務めるためのサブクラスたち。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Subsequent messages to the receiver may generate an error indicating that a message was sent to a deallocated object (provided the deallocated memory hasn’t been reused yet).</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その後に起こるレシーバへのメッセージは、割り当て解除されたオブジェクトにメッセージが送られたことを指し示すエラーを生成します（割り当て解除されたメモリがまだ再利用されていないという条件で）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Superclasses receive this message before their subclasses.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スーパークラスは、このメッセージをそれらのサブクラスの前に受け取ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Testing Class Functionality</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスの機能性のテスト</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Testing Protocol Conformance</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>プロトコル準拠のテスト</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object that sent this message.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメッセージを送り出す<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSFile<ph x="2">&lt;w2/&gt;</ph>Manager<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>_cmd<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> variable is a hidden argument passed to every method that is the current selector; in this example, it identifies the selector for the <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>copy<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>_cmd<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>変数は、ある隠された引数で、現在のセレクタであるどのメソッドにも渡されます；この例において、それは<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>copy<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>メソッドに対するセレクタを識別します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> message thus allows an object to establish relationships with other objects that will, for certain messages, act on its behalf.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>forward<ph x="2">&lt;w2/&gt;</ph>Invocation:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メッセージはこのようにあるオブジェクトに、それの代行を、特定のメッセージに対して、務める他のオブジェクトとの関係（リレーションシップ）を確立させます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>isa<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> instance variable of the new instance is initialized to a data structure that describes the class; memory for all other instance variables is set to <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>0<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいインスタンスの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>isa<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>インスタンス変数は、このクラスを記述するデータ構造に初期化されます；他の全てのインスタンス変数のメモリは<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>0<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に設定されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSUnknown<ph x="5">&lt;w5/&gt;</ph>Key<ph x="6">&lt;w6/&gt;</ph>Specifier<ph x="7">&lt;w7/&gt;</ph>Error<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> and <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>NSInvalid<ph x="10">&lt;w10/&gt;</ph>Index<ph x="11">&lt;w11/&gt;</ph>Specifier<ph x="12">&lt;w12/&gt;</ph>Error<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept> numbers are special, in that Cocoa may continue evaluating an outer specifier if they're encountered, for the convenience of scripters.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSUnknown<ph x="5">&lt;w5/&gt;</ph>Key<ph x="6">&lt;w6/&gt;</ph>Specifier<ph x="7">&lt;w7/&gt;</ph>Error<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>と<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>NSInvalid<ph x="10">&lt;w10/&gt;</ph>Index<ph x="11">&lt;w11/&gt;</ph>Specifier<ph x="12">&lt;w12/&gt;</ph>Error<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>ナンバーは特別です、スクリプト記述者の便宜のために、Cocoaは外部の指定子の評価をそれらに出くわしたならば継続するという点において。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>finalize<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> method itself will never be invoked more than once for a given object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>finalize<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>メソッドそれ自身は、指定されたオブジェクトに対して一回以上発動されることは決してありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>properties<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> are derived from the <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>with properties<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept> parameter of the <bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>duplicate<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>properties<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>は、<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>duplicate<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>コマンドの<bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>with properties<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept>パラメータから引き出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The URL response for the connection's request.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>接続の持つリクエストに対するURL応答。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The action to perform.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>実行するアクション。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The address of the implementation of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> instance method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>インスタンスメソッドの実装のアドレス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The address of the receiver’s implementation of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このレシーバでの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の実装のアドレス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The archiver creating an archive.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アーカイブを作成するアーカイバ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The argument to pass to the method when it is invoked.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッドに、それが発動されるときに渡される引数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The array contains <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>*out<ph x="2">&lt;w2/&gt;</ph>Count<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> pointers followed by a <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NULL<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> terminator.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その配列は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>*out<ph x="2">&lt;w2/&gt;</ph>Count<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>ポインタに<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NULL<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>終端子が続くものを含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The array contains <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>*out<ph x="4">&lt;w4/&gt;</ph>Count<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> pointers followed by a <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>NULL<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> terminator.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その配列は、<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>*out<ph x="4">&lt;w4/&gt;</ph>Count<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>ポインタに<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>NULL<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>終端子が続くものを含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The array contains <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>*out<ph x="6">&lt;w6/&gt;</ph>Count<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> pointers followed by a <bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>NULL<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept> terminator.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その配列は、<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>*out<ph x="6">&lt;w6/&gt;</ph>Count<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>ポインタに<bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>NULL<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>終端子が続くものを含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class definition whose class variable you wish to obtain.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それのクラス変数をあなたが入手したいクラス定義。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class object for the receiver’s superclass.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのスーパークラスに対するクラスオプジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class of the scriptable object to be created.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>作成されることになるスクリプト対応オブジェクトのクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class to inspect.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>調査するクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class to substitute for the receiver during keyed unarchiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>キー付きアンアーカイブの間にレシーバの代理を務めるクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class to substitute for the receiver's own class during archiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アーカイブしている間にレシーバ自身のクラスに対して代理を務めるクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class to use as the new class's superclass, or <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to create a new root class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラスのもつスーパークラスとして使うことになるクラス、または<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を新しいルートクラスを作成するために。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class you are inquiring about.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがそれについて尋ねているクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The class you want to inspect.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが調査したいクラス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The coder encoding the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバをエンコードするコーダ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The context in which the current script command is executed.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そこにおいて現在のスクリプトコマンドが執行されるところの前後関係。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The copied object or objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>コピーされたオブジェクトまたは複数のオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The current thread must then dequeue and process the message when it has an opportunity to do so.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そうでなければその実行はキューに加えられ実行ループによって次の機会に実行されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The debugger’s print-object command invokes this method to produce a textual description of an object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>デバッガの持つ「オブジェクト出力」コマンドは、このメソッドを発動することで、あるオブジェクトのテキスト記述を生成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The decoder used to decode the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバをデコードするために使われるデコーダ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default implementation of this method copies scripting objects by sending <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>copy<ph x="2">&lt;w2/&gt;</ph>With<ph x="3">&lt;w3/&gt;</ph>Zone:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to the object or objects specified by <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>value<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの省略時の実装は、<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>value<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>によって指定されるオブジェクトまたは複数のオブジェクトに<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>copy<ph x="3">&lt;w3/&gt;</ph>With<ph x="4">&lt;w4/&gt;</ph>Zone:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>を送ることによってスクリプティングオブジェクトをコピーします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default implementation of this method creates new scripting objects by sending <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to a class and <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>init<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> to the resulting object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの省略時の実装は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>alloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>をあるクラスに送って<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>init<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>をその結果のオブジェクトに送ることによって新しいスクリプティングオブジェクトを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default implementation returns <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>省略時の実装は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default value is <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>省略時の値は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>true<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default version is <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>省略時のバージョンは<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The forwarding object is, in a sense, able to “inherit” some of the characteristics of the object it forwards the message to.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>転送先のオブジェクトは、ある意味では、メッセージの転送元のオブジェクトのいくつかの特徴を「継承する」ことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The garbage collector invokes this method on the receiver before disposing of the memory it uses.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ガベージコレクションは、このメソッドをレシバー上で、それが使うメモリの処分を行う前に発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The group of methods that are fundamental to all Objective-C objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>全てのObjective-Cオブジェクトにとって基本的なメソッドのグループ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The invocation to forward.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この呼び出しを転送します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The key for the association.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この関連に対するキー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The keys for the to-one relationship properties of the receiver, if any.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの対一関係プロパティに対するキーを格納している配列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The library or framework you are inquiring about.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがそれについて尋ねているライブラリまたはフレームワーク。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main thread encompasses the application’s main run loop, and is where the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSApplication<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object receives events.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メインスレッドは、アプリケーションのメイン実行ループを包み込みます、そして<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSApplication<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクトがイベントを受け取るところです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The mechanism for forwarding messages uses information obtained from <bpt i="9" x="9">&lt;a9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>method<ph x="12">&lt;w12/&gt;</ph>Signature<ph x="13">&lt;w13/&gt;</ph>For<ph x="14">&lt;w14/&gt;</ph>Selector:<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/a9&gt;</ept> to create the <bpt i="15" x="15">&lt;c15&gt;</bpt><bpt i="16" x="16">&lt;s16&gt;</bpt>NSInvocation<ept i="16">&lt;/s16&gt;</ept><ept i="15">&lt;/c15&gt;</ept> object to be forwarded.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメッセージ転送メカニズムは、転送されることになる<bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>NSInvocation<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>オブジェクトを作成するために、<bpt i="9" x="9">&lt;a9&gt;</bpt><bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>method<ph x="13">&lt;w13/&gt;</ph>Signature<ph x="14">&lt;w14/&gt;</ph>For<ph x="15">&lt;w15/&gt;</ph>Selector:<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept><ept i="9">&lt;/a9&gt;</ept>から入手される情報を使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The message in this case is a method of the current object that you want to execute on the target thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この場合におけるメッセージは、現在のオブジェクトのメソッドです、それはあなたが目標のスレッド上で実行するのを望むものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The message in this case is a method of the current object that you want to execute on the thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この場合におけるメッセージは、現在のオブジェクトのメソッドです、それはあなたがこのスレッド上で実行するのを望むものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The message that’s forwarded must have a fixed number of arguments; variable numbers of arguments (in the style of <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>printf()<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>) are not supported.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>転送されるメッセージは、決まった数の引数を持つ必要があります；変動する個数の引数（<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>printf()<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の形式）はサポートされません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The method represented by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> must set up the thread environment just as you would for any other new thread in your program.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって表されるメソッドは、ちょうどあなたがあなたのプログラムにおいて何らかの他の新しいスレッドに対してするように、スレッド環境を準備しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The method that corresponds to the implementation of the selector specified by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> for the class specified by <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>a<ph x="5">&lt;w5/&gt;</ph>Class<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>, or <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> if the specified class or its superclasses do not contain an instance method with the specified selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>a<ph x="5">&lt;w5/&gt;</ph>Class<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>によって指定されたクラスに対する、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって指定されたセレクタの実装に応答するメソッド、または<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>NULL<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>、もし指定されたクラスまたはそれのスーパークラスがこの指定されたセレクタをもつインスタンスメソッドを含まないならば。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The method to inspect.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>調査するメソッド。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The method you want to inquire about.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがそれについて尋ねたいメソッド。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The minimum time before which the message is sent.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メッセージが送られる前の最小限の時間。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of a protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>プロトコルの名前</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of a selector to resolve.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この名前のセレクタを解決します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the class of which <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>obj<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> is an instance.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>obj<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>がそれのインスタンスであるクラスの名前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the class variable definition to obtain.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>入手したいクラス変数定義の名前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the relationship from the receiver’s class to another class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのクラスから別のクラスへのリレーションシップ（関係）の名前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The new class is now ready for use.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラスは今や使用する準備ができました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The new class, or <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if the class could not be created (for example, the desired name is already in use).</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラス、または<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>、もしそのクラスが作成されることができなかったならば（例えば、希望する名前が既に使用中である）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The new object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The newly available data.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しい利用可能なデータ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The number of bytes to allocate for indexed ivars at the end of the class and metaclass objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メタクラスオブジェクトそれらそしてクラスの終わりでのインデックスを付けられたivarそれらに対して割り当てられるバイト数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The number of class names in the returned array.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>返される配列の中のクラス名の数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object encode instead of the receiver (if different).</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>エンコードするオブジェクト、レシーバの代理（異なるならば）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object to register for KVO notifications.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>KVO通知に登録するオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object to remove as an observer.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブザーバとして取り除くことになるオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object to substitute for the receiver during archiving.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>アーカイブの間にレシーバの代わりをするオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object to which unrecognized messages should first be directed.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>有効でないメッセージが最初に向けられるべきオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The object will be encoded as if it were a member of the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクトは、それがこのクラスのメンバーであるかのようにエンコードされるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The observer must implement the key-value observing method <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>observe<ph x="3">&lt;w3/&gt;</ph>Value(for<ph x="4">&lt;w4/&gt;</ph>Key<ph x="5">&lt;w5/&gt;</ph>Path:<ph x="6">&lt;w6/&gt;</ph>of:<ph x="7">&lt;w7/&gt;</ph>change:<ph x="8">&lt;w8/&gt;</ph>context:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブザーバは、キー値監視メソッド<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>observe<ph x="3">&lt;w3/&gt;</ph>Value(for<ph x="4">&lt;w4/&gt;</ph>Key<ph x="5">&lt;w5/&gt;</ph>Path:<ph x="6">&lt;w6/&gt;</ph>of:<ph x="7">&lt;w7/&gt;</ph>change:<ph x="8">&lt;w8/&gt;</ph>context:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>を実装しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The order of initialization is as follows:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>初期化の順番は以下になります：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The policy for the association.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この関連に対するポリシー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The private subclasses of a class cluster substitute the name of their public superclass when being archived.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスクラスタのプライベートなサブクラスたちは、アーカイブされている時にそれらのパブリックなスーパークラスの名前の代理を務めます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The properties to be set in the copied object or objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>コピーされたオブジェクトまたは複数のオブジェクトに設定されることになるプロパティ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The properties to be set in the new object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいオブジェクトにおいて設定されるプロパティ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The protocol required as this method’s argument can be specified using the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>@protocol()<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> directive:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドの引数として要求されるプロトコルは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>@protocol()<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>指示文を使って指定されることができます：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The protocol you want to add (<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>addition<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>) must be registered already.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが加えたいプロトコル（<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>addition<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>）は、既に登録されなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The protocol you want to add the registered protocol to.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがこの登録済みプロトコルをそれへと加えたいプロトコル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The protocol you want to add to (<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>proto<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>) must be under construction—allocated but not yet registered with the Objective-C runtime.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがそれへと加えたいプロトコル（<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>proto<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>）は、建設中でなければなりません — アロケートされるしかしまだObjective-C runtimeに登録されない。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The receiver's Apple event type code, as stored in the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSScript<ph x="2">&lt;w2/&gt;</ph>Class<ph x="3">&lt;w3/&gt;</ph>Description<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> object for the object’s class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのアップルイベント型コード、そのオブジェクトのクラスに対して<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSScript<ph x="2">&lt;w2/&gt;</ph>Class<ph x="3">&lt;w3/&gt;</ph>Description<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>オブジェクトに格納される。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The receiver, or another object to take the place of the object that was decoded and subsequently received this message.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバ、またはデコードされた後このメッセージを受け取ったオブジェクトに取って代わる別のオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The receiver’s <bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>forward<ph x="9">&lt;w9/&gt;</ph>Invocation:<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept> method can then choose to forward the message to another object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバの<bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>forward<ph x="9">&lt;w9/&gt;</ph>Invocation:<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>メソッドは、その時メッセージを他オブジェクトへ転送するほうを選びます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The registered protocol you want to add to <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>proto<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>proto<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>へと加えたい登録済みプロトコル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The return value of the forwarded message is returned to the original sender.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>転送されたメッセージの戻り値は、元々の送り手（センダー）に返されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The returned objects or objects are then inserted into the container using key-value coding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>返されるオブジェクトまたは複数のオブジェクトは、それから「キー値」コーディングを使ってコンテナへと挿入されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>たいていのObjective-Cクラス階層のルートクラス、そこからサブクラスは基本的なインターフェイスとObjective-Cオブジェクトとして振舞う能力を継承します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The runtime system invokes this method whenever an object receives an <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> message it can’t respond to or forward.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ランタイムシステムは、あるオブジェクトが、それが応答または転送することができない<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メッセージを受け取る時はいつでもこのメソッドを発動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The selector is still queued on the thread’s run loop and performed as soon as possible.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>セレクタは、やはりスレッドの実行ループ上でキューに加えられ、そして可能な限り早く実行されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The selector must be a valid and non-<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NULL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>セレクタは、有効で非<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NULL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>でなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The selector must be non-<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NULL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept> and valid for the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>セレクタは、レシーバに対して有効で非<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NULL<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept>でなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The selector of the method you want to retrieve.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが回収したいメソッドのセレクタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source object for the association.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この関連に対するソースオブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The specified object or objects in the receiving container.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>受け取っているコンテナの中の指定されたオブジェクトまたは複数オブジェクト。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The statement:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この平叙文：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The string may be <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NULL<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>文字列は<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NULL<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>であるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The string to use as the new class's name.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラスの名前として使う文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The string will be copied.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この文字列はコピーされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The string with which to compare the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバと比較する文字列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The superclass of the class, or <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> if <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept> is a root class, or <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> if <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>cls<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> is <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>Nil<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラスのスーパークラス、または<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>、もし<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>cls<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>がルートクラスであるならば、または<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>Nil<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>、もし<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>cls<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>が<bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>Nil<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>であるならば。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The thread on which to execute <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それの上で<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>が実行されるスレッド。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The timer is configured to run in the default mode (<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSDefault<ph x="5">&lt;w5/&gt;</ph>Run<ph x="6">&lt;w6/&gt;</ph>Loop<ph x="7">&lt;w7/&gt;</ph>Mode<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このタイマーは、デフォルト（初期状態、省略時、特に何もしない場合）のモード（<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSDefault<ph x="5">&lt;w5/&gt;</ph>Run<ph x="6">&lt;w6/&gt;</ph>Loop<ph x="7">&lt;w7/&gt;</ph>Mode<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>）で実行されるように設定されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The timer is configured to run in the modes specified by the <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>modes<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> parameter.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このタイマーは、<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>modes<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>によって指定されたのモードで実行されるように設定されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The type must match the type of the property identified by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>その型は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって識別されるプロパティの型と一致しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The value for the property identified by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって識別されるプロパティに対する値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The value of the new instance.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいインスタンスのための値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The value to associate with the key <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> for <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>object<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>object<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に対する<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>key<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>と結び付けられることになる値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The values of the dictionary must be Objective-C objects that are convertible to <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>NSApple<ph x="7">&lt;w7/&gt;</ph>Event<ph x="8">&lt;w8/&gt;</ph>Descriptor<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept> objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ディクショナリ中の各キーは、AttributesまたはToOneRelationshipsに対するキーとして識別されなければなりません。ディクショナリの値は、<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>NSApple<ph x="7">&lt;w7/&gt;</ph>Event<ph x="8">&lt;w8/&gt;</ph>Descriptor<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>オブジェクトと変換できるObjective-Cオブジェクトでなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The values that can be returned in a change dictionary.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある変更辞書において返されることが可能な値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version number applies to <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSArchiver<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>/<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSUnarchiver<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>, but not to <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSKeyed<ph x="6">&lt;w6/&gt;</ph>Archiver<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>/<bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>NSKeyed<ph x="9">&lt;w9/&gt;</ph>Unarchiver<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>バージョン数は<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSArchiver<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>/<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>NSUnarchiver<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に適用されます、しかし<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSKeyed<ph x="6">&lt;w6/&gt;</ph>Archiver<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>/<bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>NSKeyed<ph x="9">&lt;w9/&gt;</ph>Unarchiver<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>には適用されません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version number assigned to the class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのクラスに割り当てられたバージョン数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version number for the receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>レシーバのバージョンナンバー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version number is helpful when instances of the class are to be archived and reused later.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>バージョン数は、そのクラスのインスタンスがアーカイブされて後で再利用されるときに役に立ちます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The wrapper object is otherwise a subclass of <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSProxy<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and forwards messages to the original receiver object as an <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSProxy<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> does.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このラッパーオブジェクトは、他の点では<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSProxy<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>のサブクラスであり、メッセージをオリジナルのレシーバオブジェクトに<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSProxy<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>がするように転送します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then set the class's attributes with functions like <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>class<ph x="10">&lt;w10/&gt;</ph>_add<ph x="11">&lt;w11/&gt;</ph>Method(_:<ph x="12">&lt;w12/&gt;</ph>_:<ph x="13">&lt;w13/&gt;</ph>_:<ph x="14">&lt;w14/&gt;</ph>_:)<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> and <bpt i="15" x="15">&lt;a15&gt;</bpt><bpt i="16" x="16">&lt;c16&gt;</bpt><bpt i="17" x="17">&lt;s17&gt;</bpt>class<ph x="18">&lt;w18/&gt;</ph>_add<ph x="19">&lt;w19/&gt;</ph>Ivar(_:<ph x="20">&lt;w20/&gt;</ph>_:<ph x="21">&lt;w21/&gt;</ph>_:<ph x="22">&lt;w22/&gt;</ph>_:<ph x="23">&lt;w23/&gt;</ph>_:)<ept i="17">&lt;/s17&gt;</ept><ept i="16">&lt;/c16&gt;</ept><ept i="15">&lt;/a15&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>それからそのクラスのもつ属性を<bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>class<ph x="10">&lt;w10/&gt;</ph>_add<ph x="11">&lt;w11/&gt;</ph>Method(_:<ph x="12">&lt;w12/&gt;</ph>_:<ph x="13">&lt;w13/&gt;</ph>_:<ph x="14">&lt;w14/&gt;</ph>_:)<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept>および<bpt i="15" x="15">&lt;a15&gt;</bpt><bpt i="16" x="16">&lt;c16&gt;</bpt><bpt i="17" x="17">&lt;s17&gt;</bpt>class<ph x="18">&lt;w18/&gt;</ph>_add<ph x="19">&lt;w19/&gt;</ph>Ivar(_:<ph x="20">&lt;w20/&gt;</ph>_:<ph x="21">&lt;w21/&gt;</ph>_:<ph x="22">&lt;w22/&gt;</ph>_:<ph x="23">&lt;w23/&gt;</ph>_:)<ept i="17">&lt;/s17&gt;</ept><ept i="16">&lt;/c16&gt;</ept><ept i="15">&lt;/a15&gt;</ept>のような関数で設定してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>contents<ph x="10">&lt;w10/&gt;</ph>Value<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept> and <bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>properties<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept> are derived from the <bpt i="13" x="13">&lt;c13&gt;</bpt><bpt i="14" x="14">&lt;s14&gt;</bpt>with contents<ept i="14">&lt;/s14&gt;</ept><ept i="13">&lt;/c13&gt;</ept> and <bpt i="15" x="15">&lt;c15&gt;</bpt><bpt i="16" x="16">&lt;s16&gt;</bpt>with properties<ept i="16">&lt;/s16&gt;</ept><ept i="15">&lt;/c15&gt;</ept> parameters of the <bpt i="17" x="17">&lt;c17&gt;</bpt><bpt i="18" x="18">&lt;s18&gt;</bpt>make<ept i="18">&lt;/s18&gt;</ept><ept i="17">&lt;/c17&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>contents<ph x="10">&lt;w10/&gt;</ph>Value<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept>と<bpt i="11" x="11">&lt;c11&gt;</bpt><bpt i="12" x="12">&lt;s12&gt;</bpt>properties<ept i="12">&lt;/s12&gt;</ept><ept i="11">&lt;/c11&gt;</ept>は、<bpt i="13" x="13">&lt;c13&gt;</bpt><bpt i="14" x="14">&lt;s14&gt;</bpt>make<ept i="14">&lt;/s14&gt;</ept><ept i="13">&lt;/c13&gt;</ept>コマンドの<bpt i="15" x="15">&lt;c15&gt;</bpt><bpt i="16" x="16">&lt;s16&gt;</bpt>with contents<ept i="16">&lt;/s16&gt;</ept><ept i="15">&lt;/c15&gt;</ept>と<bpt i="17" x="17">&lt;c17&gt;</bpt><bpt i="18" x="18">&lt;s18&gt;</bpt>with properties<ept i="18">&lt;/s18&gt;</ept><ept i="17">&lt;/c17&gt;</ept>パラメータから引き出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;s0&gt;</bpt>Objective-C Runtime<ept i="0">&lt;/s0&gt;</ept> module APIs define the base of the Objective-C language. These APIs include:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>Objective-C Runtime<ept i="0">&lt;/s0&gt;</ept>モジュールAPIは、Objective-C言語の基礎を定義します。それらAPIは以下のものを含みます：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This array must contain at least one string.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この配列は、少なくとも１つの文字列を含まなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This documentation comment was inherited from <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Expressible<ph x="2">&lt;w2/&gt;</ph>By<ph x="3">&lt;w3/&gt;</ph>Extended<ph x="4">&lt;w4/&gt;</ph>Grapheme<ph x="5">&lt;w5/&gt;</ph>Cluster<ph x="6">&lt;w6/&gt;</ph>Literal<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この文書化コメントは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Expressible<ph x="2">&lt;w2/&gt;</ph>By<ph x="3">&lt;w3/&gt;</ph>Extended<ph x="4">&lt;w4/&gt;</ph>Grapheme<ph x="5">&lt;w5/&gt;</ph>Cluster<ph x="6">&lt;w6/&gt;</ph>Literal<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>から引き継がれました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This documentation comment was inherited from <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Expressible<ph x="2">&lt;w2/&gt;</ph>By<ph x="3">&lt;w3/&gt;</ph>Unicode<ph x="4">&lt;w4/&gt;</ph>Scalar<ph x="5">&lt;w5/&gt;</ph>Literal<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この文書化コメントは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>Expressible<ph x="2">&lt;w2/&gt;</ph>By<ph x="3">&lt;w3/&gt;</ph>Unicode<ph x="4">&lt;w4/&gt;</ph>Scalar<ph x="5">&lt;w5/&gt;</ph>Literal<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>から引き継がれました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This function acquires the runtime lock.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この関数は、runtimeロックを獲得します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a convenience method for classes that adopt the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSCopying<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSCopying<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>プロトコルを採用するクラスのための簡易メソッドです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a convenience method for classes that adopt the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSMutable<ph x="3">&lt;w3/&gt;</ph>Copying<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> protocol.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSMutable<ph x="3">&lt;w3/&gt;</ph>Copying<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>プロトコルを採用するクラスのための簡易メソッドです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is especially useful for object serialization (that is, archiving of the object in a flattened form), where it is important to recognize changes to the layout of the instance variables in different class-definition versions.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、とりわけオブジェクトシリアル化に役立ちます（すなわち、オブジェクトの平坦化形式でのアーカイブ化）、そこにおいて異なるクラス定義バージョンにおけるインスタンス変数のレイアウトへの変更を判別することは重要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is part of Cocoa’s scripting support for inserting newly-created objects into containers without explicitly specifying a location.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、新規作成オブジェクトを明示的な場所指定なしにコンテナそれらに挿入するための、Cocoaの持つスクリプティングサポートの一部です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is the default implementation of the not-equal-to operator (<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>!=<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>) for any type that conforms to <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>Equatable<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは不等演算子（<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>!=<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>）の、<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>Equatable<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に準拠するあらゆる型に対する初期状態の実装です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is useful when you simply want to redirect messages to another object and can be an order of magnitude faster than regular forwarding.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、あなたがメッセージを別のオブジェクトに単純に転送したい場合に実用的で、正規に転送していくよりも膨大な規模の速さを持つことがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This may be <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>であるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method allows you to dynamically provide an implementation for a given selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、あなたに指定されたセレクタに対する実装を動的に提供させます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method can be used to hide an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSDiscardable<ph x="3">&lt;w3/&gt;</ph>Content<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> object's content volatility by creating an object that responds to the same messages but holds the contents of the original receiver available as long as the created proxy lives.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSDiscardable<ph x="3">&lt;w3/&gt;</ph>Content<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>オブジェクトの持つ内容の揮発性を同じメッセージに応答するオブジェクトの作成によって隠して、しかし作成されたプロキシが生きている間はオリジナルのレシーバの内容を利用可能に保持するという目的に利用可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method creates a new thread in your application, putting your application into multithreaded mode if it was not already.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、新しいスレッドをあなたのアプリケーションにおいて作成します、あなたのアプリケーションを、それがまだそうでなかったならば、あなたのアプリケーションをマルチスレッドモードにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method determines conformance solely on the basis of the formal declarations in header files, as illustrated above.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、ただ単にヘッダファイル中の形の上での宣言に基づいて準拠を、上で説明されるように、判定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method exists for historical reasons; memory zones are no longer used by Objective-C.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは歴史的理由から存在します；メモリゾーンはもはやObjective-Cによって使われません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method gives an object a chance to redirect an unknown message sent to it before the much more expensive <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>forward<ph x="3">&lt;w3/&gt;</ph>Invocation:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> machinery takes over.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、あるオブジェクトに対してそれに送られた未知のメッセージを転送する機会を、ずっと高くつく<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>forward<ph x="3">&lt;w3/&gt;</ph>Invocation:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>の仕掛けが引き継ぐ前に与えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is called before the Objective-C forwarding mechanism is invoked.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、Objective-Cの転送メカニズムが発動される前に呼び出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is deprecated.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは非推奨にされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is invoked by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSArchiver<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSArchiver<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって発動されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is invoked by <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSCoder<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSCoder<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>によって発動されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is invoked on the prospective container of the copied object or objects.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、コピーされたオブジェクトまたは複数のオブジェクトの予想されるコンテナ上で発動されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is invoked on the prospective container of the new object.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、新しいオブジェクトの予想されるコンテナ上で発動されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method is present for historical reasons and is not used with keyed archivers.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは歴史的理由から存在します、そしてキー付きアーカイバでは使われません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method might successfully return an object, an array of objects, or <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>, depending on the kind of object specifier.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、オブジェクト指定子の種類に依存して、成功裏にあるオブジェクト、複数オブジェクトの配列、または<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を返すかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method overrides the results of the decoder’s class and instance name to class encoding tables.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドはデコーダのクラスとクラスエンコーディングテーブルに対するインスタンス名をオーバーライドします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method queues the message on the run loop of the main thread using the run loop modes specified in the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>array<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> parameter.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドはメッセージを、メインスレッドの実行ループ上で<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>array<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>パラメータで指定された実行ループモードを使ってキューに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method queues the message on the run loop of the target thread using the run loop modes specified in the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>array<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> parameter.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドはメッセージを、目標のスレッドの実行ループ上で<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>array<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>パラメータで指定した実行ループモードを使ってキューに加えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method registers with the runloop of its current context, and depends on that runloop being run on a regular basis to perform correctly.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、それの現在の文脈の実行ループに登録します、そしてその実行ループが通常の原則上で動かされて正しく成し遂げられることをあてにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method removes perform requests only in the current run loop, not all run loops.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、全ての実行ループではなく、現在の実行ループにおいてのみ実行要請を取り除きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method sets up a timer to perform the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> message on the current thread’s run loop.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>a<ph x="2">&lt;w2/&gt;</ph>Selector<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メッセージを現在のスレッドの実行ループ上で実行するためのタイマーを準備します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method, in turn, raises an <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSInvalid<ph x="5">&lt;w5/&gt;</ph>Argument<ph x="6">&lt;w6/&gt;</ph>Exception<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>, and generates an error message.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このメソッドは、順に、<bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>NSInvalid<ph x="5">&lt;w5/&gt;</ph>Argument<ph x="6">&lt;w6/&gt;</ph>Exception<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>を引き起こし、そしてエラーメッセージを生成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This object need not be the same for all messages.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このオブジェクトは、全てのメッセージに対して同じものである必要はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This parameter is ignored.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このパラメータは無視されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This parameter may be <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このパラメータは<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>であるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This property is overridden by the encoder class and instance name to class encoding tables.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このプロパティは、エンコーダクラスとクラスエンコーディングテーブルに対するインスタンス名によってオーバーライドされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This property is used by Cocoa’s scripting support classes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このプロパティは、Cocoaスクリプティングをサポートするクラスによって使われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This property returns a proxy for the receiving object if the receiver adopts the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSDiscardable<ph x="3">&lt;w3/&gt;</ph>Content<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> protocol and still has content that has not been discarded.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このプロパティは、レシーバであるオブジェクトに対するプロキシ（代理）を、そのレシーバが<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSDiscardable<ph x="3">&lt;w3/&gt;</ph>Content<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>プロトコルを採用してなおかつ廃棄されてはいない内容を持つならば、返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This should usually be <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>これは、通常は<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>0<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>であるべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This thread represents the target thread.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>このスレッドは、目標スレッドを表します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This value must not be <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>この値は、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>nil<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>であってはいけません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create a new class, start by calling <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_allocate<ph x="3">&lt;w3/&gt;</ph>Class<ph x="4">&lt;w4/&gt;</ph>Pair(_:<ph x="5">&lt;w5/&gt;</ph>_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいクラスを作成するには、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>objc<ph x="2">&lt;w2/&gt;</ph>_allocate<ph x="3">&lt;w3/&gt;</ph>Class<ph x="4">&lt;w4/&gt;</ph>Pair(_:<ph x="5">&lt;w5/&gt;</ph>_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を呼び出すことによって開始してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To get the class methods of a class, use <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>class<ph x="2">&lt;w2/&gt;</ph>_copy<ph x="3">&lt;w3/&gt;</ph>Method<ph x="4">&lt;w4/&gt;</ph>List(object<ph x="5">&lt;w5/&gt;</ph>_get<ph x="6">&lt;w6/&gt;</ph>Class(cls), &amp;count)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるクラスのクラスメソッドを取得するには、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>class<ph x="2">&lt;w2/&gt;</ph>_copy<ph x="3">&lt;w3/&gt;</ph>Method<ph x="4">&lt;w4/&gt;</ph>List(object<ph x="5">&lt;w5/&gt;</ph>_get<ph x="6">&lt;w6/&gt;</ph>Class(cls), &amp;count)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を使ってください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To get the implementations of methods that may be implemented by superclasses, use <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>class<ph x="3">&lt;w3/&gt;</ph>_get<ph x="4">&lt;w4/&gt;</ph>Instance<ph x="5">&lt;w5/&gt;</ph>Method(_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> or <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>class<ph x="10">&lt;w10/&gt;</ph>_get<ph x="11">&lt;w11/&gt;</ph>Class<ph x="12">&lt;w12/&gt;</ph>Method(_:<ph x="13">&lt;w13/&gt;</ph>_:)<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>スーパークラスによって実装されないかもしれないメソッドの実装を取得するには、<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>class<ph x="3">&lt;w3/&gt;</ph>_get<ph x="4">&lt;w4/&gt;</ph>Instance<ph x="5">&lt;w5/&gt;</ph>Method(_:<ph x="6">&lt;w6/&gt;</ph>_:)<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>または<bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>class<ph x="10">&lt;w10/&gt;</ph>_get<ph x="11">&lt;w11/&gt;</ph>Class<ph x="12">&lt;w12/&gt;</ph>Method(_:<ph x="13">&lt;w13/&gt;</ph>_:)<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept>を使ってください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To locate an object that can respond to the message encoded in <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>an<ph x="2">&lt;w2/&gt;</ph>Invocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>an<ph x="2">&lt;w2/&gt;</ph>Invocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>においてエンコードされるメーセージに応答できるオブジェクトを突き止める。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To make use of the default implementation, you must therefore implement and register a suitable class description—see <bpt i="9" x="9">&lt;a9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>NSClass<ph x="12">&lt;w12/&gt;</ph>Description<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/a9&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>省略時の実装を使えるようにするには、あなたは従ってふさわしいクラス記述を実装して登録する必要があります—<bpt i="9" x="9">&lt;a9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;s11&gt;</bpt>NSClass<ph x="12">&lt;w12/&gt;</ph>Description<ept i="11">&lt;/s11&gt;</ept><ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/a9&gt;</ept>を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To respond to methods that your object does not itself recognize, you must override <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>method<ph x="3">&lt;w3/&gt;</ph>Signature<ph x="4">&lt;w4/&gt;</ph>For<ph x="5">&lt;w5/&gt;</ph>Selector:<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> in addition to <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>forward<ph x="8">&lt;w8/&gt;</ph>Invocation:<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたのオブジェクトがそれ自身では認識しないメソッドに応答するには、あなたは<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>forward<ph x="4">&lt;w4/&gt;</ph>Invocation:<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>に加えて<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>method<ph x="5">&lt;w5/&gt;</ph>Signature<ph x="6">&lt;w6/&gt;</ph>For<ph x="7">&lt;w7/&gt;</ph>Selector:<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="0">&lt;/a0&gt;</ept>をオーバーライドする必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To send the message to that object using <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>an<ph x="2">&lt;w2/&gt;</ph>Invocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>そのオブジェクトに<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>an<ph x="2">&lt;w2/&gt;</ph>Invocation<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を使ってメッセージを送る。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Topics</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>話題</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type Aliases</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型エイリアス</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type Method</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型メソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型メソッド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type Properties</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型プロパティ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type Property</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>型プロパティ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type to specify the behavior of an association.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ある関連の挙動を指定する型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Types such as the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSObject<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> class and the <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSObject<ph x="6">&lt;w6/&gt;</ph>Protocol<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> protocol that provide the root functionality of most Objective-C classes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>NSObject<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>クラスと<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>NSObject<ph x="6">&lt;w6/&gt;</ph>Protocol<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>プロトコルのようないくつかの型で、大部分のObjective-Cクラスの根幹的機能性を提供するもの</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Typically, however, you are encouraged to relinquish resources prior to finalization if at all possible.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>通常は、しかしながら、あなたはともかく可能ならばファイナライゼーションの前にリソースを放棄するのを奨励されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Upon return, contains the number of protocols in the returned array.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>戻りでは、返される配列の中のプロトコルの数を含みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use the class name explicitly when getting a class version number:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスバージョン数を取得する時はクラス名を明示的に使ってください：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use the new method-based API instead.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>新しいメソッド基盤のAPIを代わりに使ってください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use this method to ask the class object for the implementation of instance methods only.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスメソッドの実装についてクラスオブジェクトに尋ねるためにだけこのメソッドを使用してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Used by Foundation's Key-Value Observing.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Foundationのキー値コーディング監視によって使われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Key-Value Observing in Swift</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Swiftにおいてキー値監視を使用する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Objective-C Language Features</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>Objective-C言語機能を使う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Validation</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>検証</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Value</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>値</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Version numbers are needed for decoding or unarchiving, so older versions of an object can be detected and decoded correctly.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>バージョン数は、デコードまたはアンアーカイブのために必要とされます、それで古いバージョンのオブジェクトは削除されて、正しくデコードされることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Version-Notes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>バージョンに注意</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an object is sent a message for which it has no corresponding method, the runtime system gives the receiver an opportunity to delegate the message to another receiver.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あるオブジェクトが、それが対応するメソッドを持たないメッセージを送られる場合、ランタイムシステムは、メッセージを別のレシーバに委任する機会をそのレシーバに与えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When garbage collection is enabled, this method is invoked instead of <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ガベージコレクションが可能にされる場合、このメソッドは<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の代わりに発動されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When not using ARC, your implementation of <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> must invoke the superclass’s implementation as its last instruction.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ARCを使っていない場合、あなたの<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>の実装は、スーパークラスの実装をそれの最後の命令として発動しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the timer fires, the thread attempts to dequeue the message from the run loop and perform the selector.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>タイマーが点火した場合、スレッドはこのメッセージを実行ループからデキューして（待ち行列からはずして）セレクタを実行しようとします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you are done building the class, call <bpt i="24" x="24">&lt;a24&gt;</bpt><bpt i="25" x="25">&lt;c25&gt;</bpt><bpt i="26" x="26">&lt;s26&gt;</bpt>objc<ph x="27">&lt;w27/&gt;</ph>_register<ph x="28">&lt;w28/&gt;</ph>Class<ph x="29">&lt;w29/&gt;</ph>Pair(_:)<ept i="26">&lt;/s26&gt;</ept><ept i="25">&lt;/c25&gt;</ept><ept i="24">&lt;/a24&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたがクラスの構築を終えた時は、<bpt i="24" x="24">&lt;a24&gt;</bpt><bpt i="25" x="25">&lt;c25&gt;</bpt><bpt i="26" x="26">&lt;s26&gt;</bpt>objc<ph x="27">&lt;w27/&gt;</ph>_register<ph x="28">&lt;w28/&gt;</ph>Class<ph x="29">&lt;w29/&gt;</ph>Pair(_:)<ept i="26">&lt;/s26&gt;</ept><ept i="25">&lt;/c25&gt;</ept><ept i="24">&lt;/a24&gt;</ept>を呼び出してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Class Descriptions</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラス記述を扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Classes</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>クラスを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Instances</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>インスタンスを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Libraries</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>ライブラリを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Methods</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>メソッドを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Protocols</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>プロトコルを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with Selectors</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>セレクタを扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with object specifiers</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オブジェクト指定子を扱う</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can get a pointer to the new metaclass by calling <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>object<ph x="2">&lt;w2/&gt;</ph>_get<ph x="3">&lt;w3/&gt;</ph>Class(new<ph x="4">&lt;w4/&gt;</ph>Class)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、新しいメタクラスに対するポインタを、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>object<ph x="2">&lt;w2/&gt;</ph>_get<ph x="3">&lt;w3/&gt;</ph>Class(new<ph x="4">&lt;w4/&gt;</ph>Class)<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を呼び出すことによって取得できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can override the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>copy<ph x="2">&lt;w2/&gt;</ph>Scripting<ph x="3">&lt;w3/&gt;</ph>Value<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method to take more control when your application is sent a <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>duplicate<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>copy<ph x="2">&lt;w2/&gt;</ph>Scripting<ph x="3">&lt;w3/&gt;</ph>Value<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドをオーバーライドして、より多くの制御をすることが、あなたのアプリケーションが<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>duplicate<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>コマンドを送られるときに可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can override the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>new<ph x="2">&lt;w2/&gt;</ph>Scripting<ph x="3">&lt;w3/&gt;</ph>Object<ph x="4">&lt;w4/&gt;</ph>Of<ph x="5">&lt;w5/&gt;</ph>Class<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> method to take more control when your application is sent a <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>make<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>new<ph x="2">&lt;w2/&gt;</ph>Scripting<ph x="3">&lt;w3/&gt;</ph>Object<ph x="4">&lt;w4/&gt;</ph>Of<ph x="5">&lt;w5/&gt;</ph>Class<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メソッドをオーバーライドして、より多くの制御をすることが、あなたのアプリケーションが<bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>make<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept>コマンドを送られるときに可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can override this method to relinquish resources the receiver has obtained, as shown in the following example:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたはこのメソッドをオーバーライドして、レシーバが獲得しているリソースを放棄することができます、以下の例で示すように：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the version number of the class definition to provide versioning of the interface that your class represents to other classes.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、クラス定義のバージョン番号を使って、あなたのクラスが他のクラスに提示するインターフェイスのバージョン管理を提供できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this method if you introduce a new class into your application to provide some backwards compatibility in case the archive will be read on a system that does not have that class.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたが新しいクラスをあなたのアプリケーションに導入することで、そのクラスを持たないシステム上でアーカイブが読み出される場合に備えていくらかの後方互換性を提供する場合には、あなたはこのメソッドを使うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this method to deliver messages to other threads in your application.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、このメソッドを使って様々なメッセージをあなたのアプリケーションの別のスレッドに届けることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this method to deliver messages to the main thread of your application.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、このメソッドを使って様々なメッセージをあなたのアプリケーションのメインスレッドに届けることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this method to eliminate redundant objects created by the coder.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、このメソッドを使って、コーダによって作成される冗長なオブジェクトを省くことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You cannot cancel messages queued using this method.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、このメソッドを使ってキューされたメッセージをキャンセルできません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You must free the array with <bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>free()<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、配列を<bpt i="7" x="7">&lt;c7&gt;</bpt><bpt i="8" x="8">&lt;s8&gt;</bpt>free()<ept i="8">&lt;/s8&gt;</ept><ept i="7">&lt;/c7&gt;</ept>で自由にしなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You must free the array with <bpt i="9" x="9">&lt;c9&gt;</bpt><bpt i="10" x="10">&lt;s10&gt;</bpt>free()<ept i="10">&lt;/s10&gt;</ept><ept i="9">&lt;/c9&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、配列を<bpt i="9" x="9">&lt;c9&gt;</bpt><bpt i="10" x="10">&lt;s10&gt;</bpt>free()<ept i="10">&lt;/s10&gt;</ept><ept i="9">&lt;/c9&gt;</ept>で自由にしなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You must free the list with <bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>free()<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、リストを<bpt i="5" x="5">&lt;c5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>free()<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/c5&gt;</ept>で自由にしなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You must register a method name with the Objective-C runtime system to obtain the method’s selector before you can add the method to a class definition.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、メソッド名をObjective-C runtimeシステムに登録することで、そのメソッドのもつセレクタを、あなたがそのメソッドをクラス定義に追加する前に入手しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You never send a <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> message directly.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは決して<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>dealloc<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>メッセージを直接に送ってはなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You override this method to dispose of resources other than the object’s instance variables, for example:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたはこのメソッドをオーバーライドして、オブジェクトのインスタンス変数より他のリソースを片付けるようにします、例えば：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You should try to avoid managing the lifetime of limited resources such as file descriptors using <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>dealloc<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、有限リソースの生涯の管理を避けるよう試みるべきです、例えば<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>dealloc<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/c2&gt;</ept>を使うファイル記述子など。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You should usually use <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>'s <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>responds(to:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> or <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>instances<ph x="8">&lt;w8/&gt;</ph>Respond(to:)<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> methods instead of this function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、通常は<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>のもつ<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>responds(to:)<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>または<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;s7&gt;</bpt>instances<ph x="8">&lt;w8/&gt;</ph>Respond(to:)<ept i="7">&lt;/s7&gt;</ept><ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>メソッドをこの関数の代わりに使うべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You should usually use <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>‘s <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>superclass()<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> method instead of this function.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは、通常は<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSObject<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>のもつ<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>superclass()<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>メソッドをこの関数の代わりに使うべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You typically don't need to use this module directly.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは概してこのモジュールを直接に使う必要はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your override of this method doesn't need to also invoke any of the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSScript<ph x="2">&lt;w2/&gt;</ph>Command<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> error signaling methods, though it can, to record very specific information.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたのこのメソッドのオーバーライドは、大変に具体的な情報を記録するためにいかなる<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>NSScript<ph x="2">&lt;w2/&gt;</ph>Command<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>エラー合図メソッドもまた、それが出来るにもかかわらず、発動する必要はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your overriding method must provide an appropriate method signature for the given selector, either by pre formulating one or by asking another object for one.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたのオーバーライドメソッドは、指定されたセレクタに対して適切なメソッドシグネチャを提供しなければなりません、あらかじめ考案するものによって、または別のオブジェクトにそれを要求することによってのどちらかで。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>flags</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>フラグ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>options</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>オプション</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>returns the string <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>employees<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>上記は文字列<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>employees<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>you can use <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>resolve<ph x="2">&lt;w2/&gt;</ph>Instance<ph x="3">&lt;w3/&gt;</ph>Method:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> to dynamically add it to a class as a method (called <bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>resolve<ph x="6">&lt;w6/&gt;</ph>This<ph x="7">&lt;w7/&gt;</ph>Method<ph x="8">&lt;w8/&gt;</ph>Dynamically<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>) like this:</seg>
      </tuv>
      <tuv xml:lang="JA">
        <seg>あなたは<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>resolve<ph x="2">&lt;w2/&gt;</ph>Instance<ph x="3">&lt;w3/&gt;</ph>Method:<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>を使うことで、このように、それをあるクラスへ（<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>resolve<ph x="6">&lt;w6/&gt;</ph>This<ph x="7">&lt;w7/&gt;</ph>Method<ph x="8">&lt;w8/&gt;</ph>Dynamically<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/c4&gt;</ept>と呼ばれる）メソッドとして動的に加えることができます：</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
